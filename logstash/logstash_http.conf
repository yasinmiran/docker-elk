input {
	http {
		host => "127.0.0.1" # default: 0.0.0.0
		port => 8084 # default: 8080
	}
}

filter {
	#geo ip filter to transform the IP address to location
	geoip {
    		source => "[event][payloadData][remoteIp]"
    	}

	#user agent filter to transform the userAgent string into seperated fields
	useragent {
		source => "[event][payloadData][userAgent]"
		target => "userAgentDetails"
	}

	#ruby code to convert the comma seperated roles into an array
	ruby{
	     code =>"

		 # method to split the supplied string by comma, trim whitespace and return an array
		 def mapStringToArray(strFieldValue)

		    #if string is not null, return array
		    if (strFieldValue != nil)
		        fieldArr =  strFieldValue.split(',').map(&:strip).reject(&:empty?).uniq 
		        return fieldArr                             
		    end     

		    return [] #return empty array if string is nil
		 end

		 vrtArr = mapStringToArray(event.get('[event][payloadData][rolesCommaSeparated]'))
		 if vrtArr.length > 0                           
		    event.set('[event][payloadData][rolesCommaSeparated]', vrtArr) 
		 end
	"
	}

	# debug timestamp
	if ("" in [mtime]) {
		date {
    			match => [ "mtime" , "yyyy-MM-dd HH:mm:ss.SSS" ]
    			target => "@timestamp"
			locale => "en"
			timezone => "Asia/Colombo"
		}
	}
}

output {
	#seperating event type as auth and session via the eventtype header
	if [headers][eventtype] == "auth"{
		elasticsearch {
			hosts => ["localhost:9200"]
			index => "auth"
		}
	} else if [headers][eventtype] == "session"{
		elasticsearch {
			hosts => ["localhost:9200"]
			index => "session"
			document_id => "%{[event][payloadData][sessionId]}"
		}
	}
	
}

